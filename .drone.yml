kind: pipeline
type: docker
name: test

steps:
  # Testen die uitgevoerd worden bij een normale commit
  - name: test commit
    image: python:3.8
    commands:
      - pip install pipenv
      # Installeer pip packages naar de host python in plaats van een venv
      # Check met deploy op de juiste versies en gebruikt dev packages voor tests
      - pipenv install --system --deploy --dev --ignore-pipfile
      - pytest
    when:
      branch:
        exclude:
          - master

  # Deze testen worden bij commits/pull requests op master uitgevoerd
  - name: test full
    image: python:3.8
    environment:
      # Deze secrets staan gedefinieerd in de drone server
      LASTFM_KEY:
        from_secret: LASTFM_KEY
      LASTFM_SECRET:
        from_secret: LASTFM_SECRET
    commands:
      - pip install pipenv
      # Installeer pip packages naar de host python in plaats van een venv
      # Check met deploy op de juiste versies en gebruikt dev packages voor tests
      - pipenv install --system --deploy --dev --ignore-pipfile
      # Zet de benodigde env variabelen in de sessie
      # deze worden opgepakt door de applicatie
      - export LASTFM_KEY=$LASTFM_KEY
      - export LASTFM_SECRET=$LASTFM_SECRET
      # Draai ook de lastfm network tests
      - pytest --run-optional-tests=lastfm
    when:
      branch:
        - master

trigger:
  event:
    - push
    - pull_request

---
# Deze pipeline pusht een nieuwe versie van de container naar de docker registry
# als iets gemerged is naar master en alle testen geslaagd zijn
kind: pipeline
type: docker
name: publish

steps:
  - name: docker registry
    image: plugins/docker
    settings:
      # Deze secrets staan gedefinieerd in de drone server
      username:
        from_secret: DOCKER_ID
      password:
        from_secret: DOCKER_PASSWORD
      repo: mrrikkert/pymusic
      tags: latest

trigger:
  branch:
    - master
  event:
    - push
depends_on:
  - test
