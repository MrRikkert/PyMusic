kind: pipeline
type: docker
name: test

steps:
  - name: restore-cache-with-filesystem
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "volume"
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - "~/.cache/pip"
    volumes:
    - name: cache
      path: /tmp/cache

  - name: test commit
    image: python:3.9
    environment:
      MUSIC_PATH: Y:\Music
      LIBRARY_BASE_PATH: Y:\Music
    commands:
      - pip install -r requirements.dev.txt
      - pytest
      - flake8
      - autoflake -r --remove-all-unused-imports --remove-unused-variables .
      - isort . -c
    when:
      branch:
        exclude:
          - master

  - name: test full
    image: python:3.9
    environment:
      MUSIC_PATH: Y:\Music
      LIBRARY_BASE_PATH: Y:\Music
      LASTFM_KEY:
        from_secret: LASTFM_KEY
      LASTFM_SECRET:
        from_secret: LASTFM_SECRET
    commands:
      - pip install -r requirements.dev.txt
      - export LASTFM_KEY=$LASTFM_KEY
      - export LASTFM_SECRET=$LASTFM_SECRET
      - pytest --run-optional-tests=lastfm
      - flake8
      - autoflake -r --remove-all-unused-imports --remove-unused-variables .
      - isort . -c
    when:
      branch:
        - master

  - name: restore-cache-with-filesystem
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "volume"
      archive_format: "gzip"
      # filesystem_cache_root: "/tmp/cache"
      mount:
        - "~/.cache/pip"
    volumes:
    - name: cache
      path: /tmp/cache


trigger:
  event:
    - push
    - pull_request

---
kind: pipeline
type: docker
name: publish

steps:
  - name: docker registry
    image: plugins/docker
    settings:
      # Deze secrets staan gedefinieerd in de drone server
      username:
        from_secret: DOCKER_ID
      password:
        from_secret: DOCKER_PASSWORD
      repo: mrrikkert/pymusic
      tags: latest

trigger:
  branch:
    - master
  event:
    - push
depends_on:
  - test


volumes:
  - name: cache
    host:
      path: /volume1/docker/drone/cache
